--- a/polarssl/bn_mul.h
+++ b/polarssl/bn_mul.h
@@ -553,6 +553,24 @@
     asm( "lw     $12, %0        " :: "m" (c));  \
     asm( "lw     $13, %0        " :: "m" (b));
 
+#if (defined (__mips_isa_rev) && (__mips_isa_rev >= 6))
+#define MULADDC_CORE                            \
+    asm( "lw     $14, 0($10)    " );            \
+    asm( "mulu   $24, $13, $14  " );            \
+    asm( "muhu   $25, $13, $14  " );            \
+    asm( "addiu  $10, $10, 4    " );            \
+    asm( "add    $14, $24, $0   " );            \
+    asm( "add    $9,  $25, $0   " );            \
+    asm( "addu   $14, $12, $14  " );            \
+    asm( "lw     $15, 0($11)    " );            \
+    asm( "sltu   $12, $14, $12  " );            \
+    asm( "addu   $15, $14, $15  " );            \
+    asm( "sltu   $14, $15, $14  " );            \
+    asm( "addu   $12, $12, $9   " );            \
+    asm( "sw     $15, 0($11)    " );            \
+    asm( "addu   $12, $12, $14  " );            \
+    asm( "addiu  $11, $11, 4    " );
+#else
 #define MULADDC_CORE                            \
     asm( "lw     $14, 0($10)    " );            \
     asm( "multu  $13, $14       " );            \
@@ -568,6 +586,7 @@
     asm( "sw     $15, 0($11)    " );            \
     asm( "addu   $12, $12, $14  " );            \
     asm( "addi   $11, $11, 4    " );
+#endif
 
 #define MULADDC_STOP                            \
     asm( "sw     $12, %0        " : "=m" (c));  \
--- a/src/polarssl/bn_mul.h
+++ b/src/polarssl/bn_mul.h
@@ -553,6 +553,24 @@
     asm( "lw     $12, %0        " :: "m" (c));  \
     asm( "lw     $13, %0        " :: "m" (b));
 
+#if (defined (__mips_isa_rev) && (__mips_isa_rev >= 6))
+#define MULADDC_CORE                            \
+    asm( "lw     $14, 0($10)    " );            \
+    asm( "mulu   $24, $13, $14  " );            \
+    asm( "muhu   $25, $13, $14  " );            \
+    asm( "addiu  $10, $10, 4    " );            \
+    asm( "add    $14, $24, $0   " );            \
+    asm( "add    $9,  $25, $0   " );            \
+    asm( "addu   $14, $12, $14  " );            \
+    asm( "lw     $15, 0($11)    " );            \
+    asm( "sltu   $12, $14, $12  " );            \
+    asm( "addu   $15, $14, $15  " );            \
+    asm( "sltu   $14, $15, $14  " );            \
+    asm( "addu   $12, $12, $9   " );            \
+    asm( "sw     $15, 0($11)    " );            \
+    asm( "addu   $12, $12, $14  " );            \
+    asm( "addiu  $11, $11, 4    " );
+#else
 #define MULADDC_CORE                            \
     asm( "lw     $14, 0($10)    " );            \
     asm( "multu  $13, $14       " );            \
@@ -568,6 +586,7 @@
     asm( "sw     $15, 0($11)    " );            \
     asm( "addu   $12, $12, $14  " );            \
     asm( "addi   $11, $11, 4    " );
+#endif
 
 #define MULADDC_STOP                            \
     asm( "sw     $12, %0        " : "=m" (c));  \
